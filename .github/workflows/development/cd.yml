name: Development - CD Deploy

on:
  workflow_run:
    workflows: ["Development - CI Build"]
    types: [completed]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event_name == 'workflow_dispatch' || 
            (github.event.workflow_run.conclusion == 'success' && 
             github.event.workflow_run.head_branch == 'development') }}

    steps:
    - name: 🏠 Deployment Started
      run: |
        echo "════════════════════════════════════════"
        echo "🏠 STARTING HOME LAB DEPLOYMENT"
        echo "════════════════════════════════════════"
        echo "📍 Server: $(hostname)"
        echo "🌐 IP: $(curl -s --max-time 5 http://checkip.amazonaws.com/ || echo 'Unknown')"
        echo "⏰ Time: $(date)"
        echo "🔄 Event: ${{ github.event_name }}"
        echo "════════════════════════════════════════"

    - name: 🔍 System Check
      run: |
        echo "🖥️ System Information:"
        echo "  CPU: $(nproc) cores"
        echo "  Memory: $(free -h | grep '^Mem:' | awk '{print $2}')"
        echo "  Disk: $(df -h / | tail -1 | awk '{print $4}') available"
        echo "  Docker: $(docker --version)"
        echo ""

    - name: 🆓 Memory Optimization
      run: |
        echo "🧹 Optimizing memory for t2.micro..."
        sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches || true
        docker system prune -f || true
        echo "✅ Memory optimization complete"

    - name: 📥 Pull Docker Image
      run: |
        echo "📥 Pulling latest Docker image..."
        docker pull wolf4war/foodie:latest
        echo "✅ Image pulled successfully"

    - name: 🛑 Stop Existing Container
      run: |
        echo "🛑 Stopping existing container (if any)..."
        if [ "$(docker ps -q -f name=foodie)" ]; then
          docker stop foodie
          docker rm foodie
          echo "✅ Existing container removed"
        else
          echo "ℹ️ No existing container to remove"
        fi

    - name: 🚀 Start New Container
      run: |
        echo "🚀 Starting new Foodie container..."
        docker run -d \
          -p 80:80 \
          --name foodie \
          --memory="800m" \
          --restart=unless-stopped \
          wolf4war/foodie:latest
        echo "✅ Container started successfully"

    - name: ⏱️ Wait for Container
      run: |
        echo "⏱️ Waiting 15 seconds before health check..."
        sleep 15
        echo "✅ Wait complete"

    - name: 🌐 Test Internet Connectivity
      run: |
        echo "🌐 Testing container internet access..."
        if docker exec foodie curl -f -s --max-time 10 https://api.themealdb.com/json/v1/1/categories.php > /dev/null; then
          echo "✅ Container has internet access"
        else
          echo "❌ Internet connectivity test failed"
          echo "📋 Container logs:"
          docker logs foodie --tail 10
        fi

    - name: 🏥 Health Check
      run: |
        echo "🏥 Performing application health check..."
        timeout=120
        counter=0
        while [ $counter -lt $timeout ]; do
          if curl -f -s http://localhost:80 > /dev/null 2>&1; then
            echo "✅ Application is responding!"
            break
          fi
          sleep 3
          counter=$((counter + 3))
          echo "⏳ Waiting... ($counter/$timeout seconds)"
        done

        if [ $counter -ge $timeout ]; then
          echo "❌ Application health check failed"
          echo "📋 Container status:"
          docker ps -f name=foodie
          echo "📋 Container logs:"
          docker logs foodie --tail 20
          exit 1
        fi

    - name: 🧹 Cleanup
      run: |
        echo "🧹 Cleaning up old images..."
        docker image prune -f
        echo "✅ Cleanup complete"

    - name: 🎉 Deployment Success
      run: |
        PUBLIC_IP=$(curl -s --max-time 5 http://checkip.amazonaws.com/ || echo 'Unknown')
        echo "════════════════════════════════════════"
        echo "🎉 DEPLOYMENT COMPLETED SUCCESSFULLY!"
        echo "════════════════════════════════════════"
        echo "🏠 Server: foodie-development"
        echo "🔗 URL: http://$PUBLIC_IP:80"
        echo "🐳 Container: foodie (running)"
        echo "💾 Memory: 800MB limit"
        echo "════════════════════════════════════════"
